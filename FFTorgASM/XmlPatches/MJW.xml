<?xml version="1.0" encoding="utf-8" ?> 
<Patches>
  <Patch name="Monster Job Wheel (MJW)">
    <Description>Allow monsters to change their job to other monster job. Made by xjamxx. This patch is not compatible with OEJ by itself, use MJW compatibility patch.</Description>
    <Location file="WORLD_WORLD_BIN" offset="11A47C" mode="ASM" offsetMode="RAM">
      nop				#Prevent focus to move to the first job in the wheel.
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="118178" mode="ASM" offsetMode="RAM">
      lw at,0x001c(sp)
      slti v0,v0,0x0019
      bne v0,zero,0x001181b4
      lui v0,0x8019
      beq at,zero,0x001181b4		#at is original s1, in wheel is zero, otherwise not.
      addiu v0,v0,0xc704
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="119C90" mode="ASM" offsetMode="RAM">
      lhu t0,0x0000(s0)
      addu s0,zero,zero
      lui s1,0x8019
      andi v0,t0,0x4000
      beq v0,zero,SSS1
      andi t0,t0,0x1000			#To handle mastered star.
      addiu s0,s1,0xba10
SSS1: lui at,0x801d
      addu at,at,s3
      lh v0,-0x7bdc(at)
      sll a1,v1,0x10
      beq v0,zero,0x00119cdc
      sra a1,a1,0x10
      lh a0,0x0010(sp)
      lbu a3,-0x36e6(s1)
      bne t0,zero,0x00119cdc		#Jump to 119cec to avoid drawing wheel sprite at all.
      or s1,zero,zero			#To prevent shadow correction for the wheel, since image reduced.
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="118EA8" mode="ASM" offsetMode="RAM">
      lui at,0x801d
      lh v0,-0x7c0c(at)
      nop
      sll v0,v0,0x01
      addu at,at,v0
      lhu v0,-0x7c08(at)
      nop
      srl at,v0,0x0e
      srl v0,v0,0x0c			#To handle displayed job lvl.
      or v0,v0,at
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="120B90" mode="ASM" offsetMode="RAM">
      nop				#To prevent possible load delay.
      addiu at,a0,0xff70
      sltiu at,at,0x000b
      beq at,zero,WAED
      addiu v0,a0,0xff70		#Increase possible job ids to 8F?.
      ori v0,zero,0x0001
WAED: jr ra
      sltiu v0,v0,0x000e
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="1256C8" mode="ASM" offsetMode="RAM">
      sll v0,a0,0x10			#This entire location must not exceed 163 instructions (166 with 3 labels).
      sra v0,v0,0x0e
      lui at,0x801d
      addu at,at,v0
      lw v0,-0x2a14(at)
      addu a2,a1,zero
      lbu a1,0x0070(v0)
      lbu a0,0x0024(v0)			#Monster wheel adds 1000h, so unless andi, just load byte instead of half.
      lbu a3,0x0072(v0)			#Since plotting routines are mixed, needed a3 to check Sprite Set.
@setup_formation_sprite:		#Now the plotting sprite routine is one for the roster and the wheel.
      addiu sp,sp,0xffd0		#Now the wheel support both human and monster sprites.
      sw ra,0x0010(sp)
      sw s0,0x0014(sp)
      sw s1,0x0018(sp)
      sw s2,0x001c(sp)
      or s0,a0,zero
      or s1,a2,zero
      lh s2,0x002c(v0)
      lui t0,0x8019
      ori v0,zero,0x009a		#Job ID special cases, 9a.
      beq v0,s0,SFSF
      ori v0,zero,0x51
      addiu v0,s0,0xff6a		#Job ID special cases, 96, 97, 98 (dummy) and 99.
      bltz v0,SFS1
SFS0: addiu v0,v0,0x004e
      j SFSF
SFS1: addiu at,s0,0xff70		#Job ID special cases, 90 and 91.
      bltz at,SFS2
      sll v0,at,0x02
      j SFS0
SFS2: addiu at,s0,0xffa2		#Monsters Job IDs from 5e to 8f.
      bltz at,SFS3
      ori v0,zero,0x0003
      divu at,v0
      mflo at
      j SFSF				#Will use for sprite calculation:
      addiu v0,at,0x003e		#3e chocobo, +1 for goblin and so on.
SFS3: ori v0,zero,0x0048		#Job ID special cases, 48.
      beq v0,s0,SFSF
      ori v0,zero,0x4c
      sltiu v0,a3,0x0035		#Special job up to 34h, more like Unique jobs = Sprite sets.
      beq v0,zero,SFS4
      addu at,t0,a3
      lbu v1,-0x21cc(at)
      j SFSE
      sll v0,v1,0x10
SFS4: or v1,s0,zero
      ori v0,zero,0x005c		#5c = Dancer = 92
      bne v1,v0,SFS5			#if not dancer branch?
      ori v0,zero,0x005b
      j SFS6				#if dancer v1 = 3b dancer unit.bin
      ori v1,zero,0x003b
SFS5: bne v1,v0,SFS7			#if not bard branch?
      ori v0,zero,0x005d
      j SFS6				#if bard v1 = 3a bard unit.bin
      ori v1,zero,0x003a
SFS7: bne v1,v0,SFS8			#if not mime branch?
      sll v1,s0,0x01
      j SFS9				#if mime v1 = 3c and v0 = job*2
      ori v1,zero,0x003c
SFS8: addiu v1,v1,0xff84
SFS9: andi v0,a1,0x0040			#Female
      beq v0,zero,SFSE
      sll v0,v1,0x10
      addiu v1,v1,0x0001		#Female +1 in unit.bin
SFS6: sll v0,v1,0x10
SFSE: sra v0,v0,0x10
SFSF: sw a1,0x0020(sp)			#Store gender for later use.
      sll a0,v0,0x01
      addu a0,a0,v0
      sll a0,a0,0x02
      addiu v0,t0,0xda44
      addu a0,a0,v0
      or a1,a2,zero
      jal 0x000222dc
      ori a2,zero,0x000c		#It must be 0x000c or almost nothing will be drawn.
      ori v0,zero,0x0048		#Reis dragon form, exception. Since its higher than 34 but it is not generic.
      beq v0,s0,SFSA
      addiu v0,s0,0xffcb
      sltiu v0,v0,0x0029		#Generic job.
      bne v0,zero,SFED
SFSA: sb s0,-0x0002(sp)			#Store Job ID in the stack to use it in next jal.
      jal 0x001090c8
      or a0,s2,zero
      sll v0,v0,0x10
      sra v1,v0,0x10
      bgez v1,SFSB
      addu v0,v1,zero
      addiu v0,v1,0x0003
SFSB: sra a1,v0,0x02
      sll v0,a1,0x02
      subu v0,v1,v0
      sll v0,v0,0x04
      addiu v0,v0,0x0140
      sll a0,v0,0x10
      sra a0,a0,0x10
      jal 0x00023a54
      addiu a1,a1,0x00e0
      sh v0,0x008(s1)
SFED: lw ra,0x0010(sp)
      lw s0,0x0014(sp)
      lw s1,0x0018(sp)
      lw s2,0x001c(sp)
      jr ra
      addiu sp,sp,0x0030
@monster_wheel:				#Custom routine, monster Job ID list maker.
      beq a0,zero,MWED			#It cannot be used as jal beside the place it is used.
      addiu a0,a1,0xffa2
      sltiu v0,a0,0x0030		#8d, is the last hydra.
      beq v0,zero,MWED
      nop				#Nops for adding restrictions to unlock wheel.
      nop
      nop
      ori at,zero,0x0003
      or t2,zero,zero
      nop
      nop
      nop
      nop
      ori a1,a1,0x1000			#This extra one is to handle displayed lvl and mastered star.
      divu a0,at
      mflo t0
      or s1,s6,zero
      or s2,zero,zero
      sll at,t0,0x01
      addu t0,t0,at
      addiu t0,t0,0x105e
      ori t1,zero,0x105e		#5e for choco.
MWLP: beq t1,t0,MWS1
      sh t1,0x0000(s1)
      addiu s1,s1,0x0002
      j MWS2
      addiu s2,s2,0x0001
MWIL: bne t3,a1,MWS3
      addu at,s2,t2
      ori t3,t3,0x4000
      sb at,-0x0004(s6)
MWS3: sh t3,0x0000(s1)
      addiu s1,s1,0x0002
      addiu t2,t2,0x0001
MWS1: sltiu v0,t2,0x0003
      bne v0,zero,MWIL
      addu t3,t2,t0
      addu s2,s2,t2
MWS2: sltiu v0,t1,0x108b		#8b is the first hydra.
      bne v0,zero,MWLP
      addiu t1,t1,0x0003
MWED: jr ra				#Since next instruction is a lui over at, it does not matter.
@formation_cursor:			#Vanilla routine, but optimized to gain space.
      lui at,0x801d
      lh a1,-0x79cc(at)
      addu v1,zero,zero
      blez a1,FCED
      sll v0,a0,0x10
      sra a2,v0,0x10
      addiu a0,at,0xd5ec
FCLP: lw at,0x0000(a0)
      addiu a0,a0,0x0004
      lh at,0x002c(at)
      addiu t0,v1,0x0001
      beq at,a2,FCED
      slt at,t0,a1
      bne at,zero,FCLP
      or v1,t0,zero
FCED: jr ra
      addu v0,v1,zero
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="12257C" mode="ASM" offsetMode="RAM">
      addiu sp,sp,0xffd0		#This is part of the routine that writes the Jobs ID list.
      sw ra,0x002c(sp)			#Mostly is vanilla, but optimized to gain space for a routine.
      sw s6,0x0028(sp)
      sw s5,0x0024(sp)
      sw s4,0x0020(sp)
      sw s3,0x001c(sp)
      sw s2,0x0018(sp)
      sw s1,0x0014(sp)
      sw s0,0x0010(sp)
      addu s6,r5,zero
      addu s5,a2,zero
      andi s1,a0,0x00ff
      lui v1,0x801d
      addiu v1,v1,0xd5ec
      sll v0,s1,0x02
      addu s3,v0,v1
      lw a0,0x0000(s3)
      addu s2,zero,zero
      jal 0x0012b1b4
      addiu a0,a0,0x0077
      jal 0x0012243c
      or a0,s1,zero
      addu s0,v0,zero
      lw a0,0x0000(s3)
      ori v0,zero,0x0002
      lh a1,0x0024(a0)
      bne s5,v0,JWS1
      sll v0,s2,0x01
      bne s0,a1,JWS1
      sll v0,s2,0x01
      ori s0,s0,0x4000
      sb s2,-0x0004(s6)
JWS1: addu v0,v0,s6
      sh s0,0x0000(v0)
      lui v1,0x801d
      addiu v1,v1,0xd5ec
      sll v0,s1,0x02
      addu s4,v0,v1
      lw s0,0x0000(s4)
      lbu a0,0x0070(a0)
      jal @monster_wheel		#Added custom monster job wheel routine.
      andi a0,a0,0x0020
      bne s2,zero,0x12272c		#Branch if monster job list was created.
      lh a0,0x0024(s0)
      jal 0x00120b90
      addiu s2,s2,0x0001
      bne v0,zero,0x12272c
      lh at,0x003e(s0)
      ori s3,zero,0x0001
      bne at,zero,0x122730
      sll v0,s2,0x01
      jal 0x0012b1ec
      ori a0,zero,0x0001
      sll v0,s2,0x01
      addu s1,v0,s6
      nop				#Five free spaces.
      nop
      nop
      nop
      nop
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="1226CC" mode="ASM" offsetMode="RAM">
      lw at,0x0000(s4)
      lbu t1,-0x0004(s6)
      lh v0,0x0024(at)
      sb s2,-0x0004(s6)
      beq s0,v0,0x00122710
      nop
      sb t1,-0x0004(s6)
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="119678" mode="ASM" offsetMode="RAM">
      jal @formation_cursor
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="11AE48" mode="ASM" offsetMode="RAM">
      jal @formation_cursor
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="11E014" mode="ASM" offsetMode="RAM">
      jal @formation_cursor
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="120A44" mode="ASM" offsetMode="RAM">
      jal @formation_cursor
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="119C30" mode="ASM" offsetMode="RAM">
      jal @setup_formation_sprite
      or a3,a0,zero			#Since plotting routines are mixed, needed a3 to check Sprite Set.
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="1090C8" mode="ASM" offsetMode="RAM">
      addiu sp,sp,0xffe0		#This routine returns values for palette calculation.
      sw ra,0x0018(sp)			#The Job ID is already stored in the stack for future use.
      sw s1,0x0014(sp)
      jal 0x00059af0
      sw s0,0x0010(sp)
      lbu v1,0x0000(v0)
      addiu s0,sp,0x001c		#Change s0 pointer reference to use custom values.
      sb v1,0x0000(s0)			#Store sprite type in the stack for future use.
    </Location>
  </Patch>
  <Patch name="MJW - Show one message on wheel req">
    <Description>Requires 'MJW'. Set only one message for the unlocked monster jobs. No variables, so edit through xml only. Edit this eqv if needed:
	mjw_txtnum			Number of the text entry slot in job requirements.</Description>
    <Location file="WORLD_WORLD_BIN" offset="118EE8" mode="ASM" offsetMode="RAM">
    .eqv  %mjw_txtnum, 0x004D
      andi a0,a0,0x00ff
      addiu v0,a0,0xffa2
      sltiu v0,v0,0x0032
      bne v0,zero,WTED
      addiu v0,zero,%mjw_txtnum
      slti v0,a0,0x004a
      bne v0,r0,WTED
      addiu v0,a0,0x0013
      addiu v0,a0,0xffb6
WTED: jr ra
      andi v0,v0,0x00ff
    </Location>
  </Patch>
  <Patch name="MJW - Show job descriptions on monster wheel req">
    <Description>Requires 'MJW'. Set job descriptions as req message for the unlocked monster jobs.</Description>
    <Location file="WORLD_WORLD_BIN" offset="118EE8" mode="ASM" offsetMode="RAM">
      addiu v0,a0,0xffa2
      sltiu v0,v0,0x0032
      bne v0,zero,WTED
      or v0,a0,zero
      ori t0,zero,0x8800
      slti v0,a0,0x004a
      bne v0,r0,WTED
      addiu v0,a0,0x0013
      addiu v0,a0,0xffb6
WTED: jr ra
      or v0,v0,t0
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="119828" mode="ASM" offsetMode="RAM">
      lbu r2,0x0024(r2)
      andi a0,s1,0x00ff
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="11983C" mode="ASM" offsetMode="RAM">
      lui t0,0x0010
      ori a0,zero,0x6000
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="119898" mode="ASM" offsetMode="RAM">
      lui t0,0x0010
      jal 0x00118ee8
      andi a0,s1,0x00ff
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="1198ac" mode="ASM" offsetMode="RAM">
      ori a0,zero,0x6000
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="1134E8" mode="ASM" offsetMode="RAM">
      addiu sp,sp,0xffe8
      sw ra,0x0014(sp)
      sw s0,0x0010(sp)
      andi a2,a0,0xffff
      addu s0,a1,zero
      srl a0,a0,0x10
      ori a1,a0,0x002b
      ori a0,zero,0x0001
      jal 0x0012a370
      addu a3,zero,zero
      ori v0,zero,0x0001
      lui at,0x8019
      sb v0,-0x4533(at)
      jal 0x00044018
      addu a0,s0,zero
      ori v0,zero,0x0001
      lui at,0x8015
      sw v0,0x330c(at)
      lw ra,0x0014(sp)
      lw s0,0x0010(sp)
      jr ra
      addiu sp,sp,0x0018
    </Location>
  </Patch>
  <Patch name="MJW - Fix transitions 1 - Center image">
    <Description>Requires 'MJW'. One workaround to fix transitions with larger sprites.</Description>
    <Location file="WORLD_WORLD_BIN" offset="11A6C4" mode="ASM" offsetMode="RAM">
      ori a0,zero,0x0074
      ori v0,zero,0x0067
    </Location>
  </Patch>
  <Patch name="MJW - Fix transitions 2 - No image for monsters">
    <Description>Requires 'MJW'. Another workaround to fix transitions with larger sprites. Additional notes, a complete fix for the bigger sprite transitions, it is not worth the effort. Still if anybody wants to try, check where this routine writes the v0, a0 and a1 and learn how to scale the incoming sprite plus the position and areas of the sprites.</Description>
    <Location file="WORLD_WORLD_BIN" offset="11A6C4" mode="ASM" offsetMode="RAM">
      ori v0,zero,0x007b		#Undo previous fix.
      subu v0,v0,v1
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="11A6D0" mode="ASM" offsetMode="RAM">
      lbu t0,-0x0010(sp)
      ori t1,zero,0x0020
      lui t2,0x0028
      bne t0,t1,FTS1
      ori t2,t2,0x0018
      or t2,zero,zero
FTS1: lui at,0x8019
      sw t2,-0x3758(at)
      sw t2,-0x3748(at)
      sh v0,-0x375a(at)
      sh v0,-0x374a(at)
      ori v0,zero,0x0064
      lhu t2,0x0010(sp)
      sh a0,-0x375c(at)
      sh a0,-0x374c(at)
      sll t2,t2,0x10
      sra t2,t2,0x12
      beq v1,v0,FTS2
      sh a1,-0x3750(at)
      addiu t2,t2,0x0040
FTS2: addiu v0,t2,0x0100
      nop
      nop
      nop
    </Location>
  </Patch>
  <Patch name="MJW - Monster Level restriction">
    <Description>Requires 'MJW'. The wheel will be unlocked after the moster hits a certain level. For more complex restrictions, find a code cave and write it there. No variables, so edit through xml only. Edit this eqv if needed:
	mon_lvl				Monster level needed to unlock wheel.</Description>
    <Location file="WORLD_WORLD_BIN" offset="125878" mode="ASM" offsetMode="RAM">
    .eqv  %mon_lvl, 0x0032
      lhu t1,0x0000(s0)
      nop
      nop
      ori at,zero,0x0003
      sltiu t2,t1,%mon_lvl		#Check if monster reached needed level.
      bne t2,zero,0x0012590c
      nop
      nop
      nop
    </Location>
  </Patch>
  <Patch name="MJW - Progression Byte restriction">
    <Description>Requires 'MJW'. The wheel will be unlocked after progression byte reaches a certain value. Can be used with level restriction. For more complex restrictions, find a code cave and write it there. No variables, so edit through xml only. Edit this eqv if needed:
	prg_unlock			Inner game stage needed to unlock wheel (35h = chapter 4 - before orbonne).</Description>
    <Location file="WORLD_WORLD_BIN" offset="125890" mode="ASM" offsetMode="RAM">
    .eqv  %prg_unlock, 0x0035
      nop
      sltiu t2,t3,%prg_unlock		#Check if player reached progression value.
      bne t2,zero,0x0012590c
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="12587C" mode="ASM" offsetMode="RAM">
      lui at,0x8005
      lbu t3,0x78d4(at)
    </Location>
  </Patch>
  <Patch name="MJW - Elidibus Defeat restriction">
    <Description>Requires 'MJW'. The wheel will be unlocked after Elidibus is killed. Can be used with level restriction, but overwrites progression byte restriction. For more complex restrictions, find a code cave and write it there.</Description>
    <Location file="WORLD_WORLD_BIN" offset="125890" mode="ASM" offsetMode="RAM">
      andi t3,t3,0x000f			#Check if Elidibus was killed by player.
      beq t3,zero,0x0012590c
      or t2,zero,zero
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="12587C" mode="ASM" offsetMode="RAM">
      lui at,0x8005
      lbu t3,0x79C7(at)
    </Location>
  </Patch>
  <Patch name="MJW - No class change">
    <Description>Requires 'MJW'. It simplifies the wheel to the 3 types of monsters per class.</Description>
    <Location file="WORLD_WORLD_BIN" offset="1258BC" mode="ASM" offsetMode="RAM">
      or t1,t0,zero
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="125900" mode="ASM" offsetMode="RAM">
      sltiu v0,t1,0x0000
    </Location>
  </Patch>
  <Patch name="MJW - OEJ compatibility patch">
    <Description>Requires 'OEJ' and 'MJW' after it, fixes incompatibility issues with OEJ patch. No variables, so edit through xml only. Edit these labels to match with OEJ labels (they go across all locations):
	oej_id				OEJ job ID. Recommended range from 0x35 to 0x47.
	oej_ma_unit			OEJ formation sprite for male. Shishi value -1?
	oej_fe_unit			OEJ formation sprite for female. Shishi value -1?</Description>
    <Location file="WORLD_WORLD_BIN" offset="125764" mode="ASM" offsetMode="RAM">
    .label  @oej_id, 0x39
    .label  @oej_ma_unit, 0x08
    .label  @oej_fe_unit, 0x09
      sltiu v0,a3,0x0035		#Special job up to 34h, more like Unique jobs = Sprite sets.
      beq v0,zero,SFS4
      addu at,t0,a3
      lbu v1,-0x21cc(at)
      j SFSE
      sll v0,v1,0x10
SFS4: ori at,zero,@oej_id
      bne at,s0,SFS5
      andi v0,a1,0x0040			#Gender
      beq v0,zero,SFS6
      ori v1,zero,@oej_ma_unit		#Set OEJ male Formation Sprite.
      j SFS6
      ori v1,zero,@oej_fe_unit		#Set OEJ female Formation Sprite.
SFS5: or v1,s0,zero
      addiu at,v1,0xffa4		#Check if mime or dancer.
      bltz at,SFS7			#If not, branch.
      sll v1,s0,0x01
      sll at,at,0x01
      addiu v1,at,0x00b6
SFS7: addiu v1,v1,0xff84
      andi v0,a1,0x0040			#Female
      beq v0,zero,SFSE
      sll v0,v1,0x10
      addiu v1,v1,0x0001		#Female +1 in unit.bin
SFS6: sll v0,v1,0x10
SFSE: sra v0,v0,0x10
      nop				#One free space.
    </Location>
    <Location file="WORLD_WORLD_BIN" offset="122624" mode="ASM" offsetMode="RAM">
      bne s2,zero,W1ED			#Branch if monster job list was created.
      lh a0,0x0024(s0)			#This is the second half of the routine that writes the Jobs ID list.
      jal 0x00120b90			#Mostly is vanilla, but optimized to gain space for a routine.
      addiu s2,s2,0x0001
      bne v0,zero,W1ED
      lh at,0x003e(s0)
      ori s3,zero,0x0001
      bne at,zero,W1ED
      sll v0,s2,0x01
      jal 0x0012b1ec
      ori a0,zero,0x0001
      sll v0,s2,0x01
      addu s1,v0,s6
      lw s4,0x0000(s4)
W1LP: addiu s0,s3,0x004a
      jal 0x0012b1ec
      ori a0,zero,0x0001
      addiu v1,v0,0x0000
      lbu at,0x0070(s4)
      ori v0,zero,0x005b
      andi at,at,0x0040
      srl at,at,0x0006
      beq s0,v0,W1S1
      addu v0,v0,at
      ori v0,zero,0x005c
      beq s0,v0,W1S1
      addiu v0,zero,@oej_id
      or v0,s0,zero
W1S1: or s0,v0,zero
      ori v0,zero,0x0002
      bne s5,v0,W1S2
      lh at,0x0024(s4)
      lbu t1,-0x0004(s6)
      beq s0,at,W1S3
      sb s2,-0x0004(s6)
      sb t1,-0x0004(s6)
W1S2: beq v1,zero,W1S4
      ori v0,zero,0x0002
      j W1S5
      sh s0,0x0000(s1)
W1S4: bne s5,v0,W1S6
      sll a0,s0,0x10
      jal 0x00122488
      sra a0,a0,0x10
      bne v0,zero,W1S6
W1S3: ori v0,s0,0x4000
      sh v0,0x0000(s1)
W1S5: addiu s1,s1,0x0002
      addiu s2,s2,0x0001
W1S6: addiu s3,s3,0x0001
      sltiu v0,s3,0x0014
      bne v0,zero,W1LP
W1ED: sll v0,s2,0x01
      nop				#Two free spaces.
      nop
    </Location>
  </Patch>
</Patches>