<?xml version="1.0" encoding="utf-8" ?> 
<Patches>
  <Patch name="Random unit gear based on story progression - override with 0x16b">
    <Description>
      Random unit gear based on story progression, but can be overridden with 0x16b for any unit.
      (0x16b is the last row, last column in the ENTD for a unit, in the Unknown box, two underneath
       the top value that has its own row.)
    </Description>
    <Location file="BATTLE_BIN" offset="F59BC" mode="ASM">  
      lbu     t6,0x016b(t5)  	      # Load 0x016b from unit
      lui     t0,0x8005
      bne     t6,zero,SKP           # If not zero, jump to SKP (don't use shop availability)
      nop
      lbu     t6,0x78d8(t0)         # Load shop availability from memory
      nop
SKP:  sltiu   t7,t6,1               
      jr      ra
      addu    t6,t6,t7              # If value = 0, set value = 1
    </Location>
    <Location file="SCUS_942_21" offset="4D49C" mode="ASM">
      sw      ra,0x94(sp)
      move    t5,a0
      jal     0x15c9bc              # Jump to new routine
      li      v0,0x20
    </Location>
    <Location file="SCUS_942_21" offset="4D52C" mode="ASM">
      nop
    </Location>
    <Location file="SCUS_942_21" offset="4D5D8" mode="ASM">
      lbu     v1,0x0a(a1)
    </Location>
  </Patch>
  <Patch name="Random unit gear based on story progression">
    <Description>
      Random unit gear based on story progression
    </Description>
    <Location file="BATTLE_BIN" offset="F59BC" mode="ASM">  
      lui     t6,0x8005
      lbu     t6,0x78d8(t6)         # Load shop availability from memory
      nop
      sltiu   t7,t6,1               
      jr      ra
      addu    t6,t6,t7              # If value = 0, set value = 1
    </Location>
    <Location file="SCUS_942_21" offset="4D49C" mode="ASM">
      sw      ra,0x94(sp)
      move    t5,a0
      jal     0x15c9bc              # Jump to new routine
      li      v0,0x20
    </Location>
    <Location file="SCUS_942_21" offset="4D52C" mode="ASM">
      nop
    </Location>
    <Location file="SCUS_942_21" offset="4D5D8" mode="ASM">
      lbu     v1,0x0a(a1)
    </Location>
  </Patch> 
  <Patch name="Random unit equipment more selective">
    <Description>
	Random unit equipment will now be more selective
        of secondary item types. (You shouldn't see 
        knights in Chapter 2 using linen robes)
    </Description>
    <Location file="SCUS_942_21" offset="4D53C" mode="ASM">
      li      t7,0                  # ItemFound = false (initialize)
    </Location>
    <Location file="SCUS_942_21" offset="4D5F0" mode="ASM">
      bne     v0,zero,SKP           # Skip list index increment if not a new item type
      li      t7,1                  # ItemFound = true
      addiu   t1,t1,1               # Increment list index
      nop
SKP:  move    t4,v1
      move    v1,t1
    </Location>
    <Location file="SCUS_942_21" offset="4D628" mode="ASM">
      addiu   s0,t1,1               # Length = list index + 1
      beq     t7,zero,0x5ce60       # If (no item found), skip
    </Location>
  </Patch>
  <Patch name="Crystals can include special job abilities (Base job matching check removed)">
    <Description>
      Crystals can contain abilities from special jobs regardless of the inheriting unit's base job. However, the inheriting unit's base job would have to include the ability AT THE SAME INDEX in order to learn it. (e.g. Ramza could learn Night Sword from Gafgarion's crystal if it was Gafgarion's 10th ability  and Ramza's 02 Squire class also contained Night Sword as the 10th ability.)
    </Description>
    <Location file="BATTLE_BIN" offset="1196E8" mode="ASM">
      bne     t3,t3,0x180880        #	Wiped out base job check, so won't skip consideration
    </Location>
    <Location file="BATTLE_BIN" offset="1197F4" mode="ASM">
      j       0x15cb50              #	Jump to new code (replaces nop)
    </Location>
    <Location file="BATTLE_BIN" offset="F5B50" mode="ASM">
      bne     s5,zero,CON           #	If we're not considering the base job, skip this code
      nop
      
      addiu   sp,sp,-4              #	Save v0
      sw      v0,0x00(sp)
      lw      v1,0x3c(sp)           #	Base job of crystal unit
      nop
      sll     v0,v1,1
      addu    v0,v0,v1
      lui     v1,0x8006
      lw      v1,0x6194(v1)         #	Start of job data
      sll     v0,v0,0x04
      addu    v0,v0,v1              #	Job data for crystal unit
      lbu     t1,0(v0)
      move    a1,s1                 #     Argument 2: Ability index
      jal     0x05a568              #     Get ability ID
      move    a0,t1                 #     Argument 1: Skillset ID of crystal unit 
      move    t2,v0
      
      lw      v0,0(sp)              #     Restore v0
      addiu   sp,sp,4
      bne     t2,s4,SKP             #	IF (InheritingUnitAbility[index] != CrystalUnitAbility[index])
      nop                           #		Branch to SKP
      
CON:  j       0x1807f8              # 	Save this ability to the crystal
      nop
      
SKP:  j       0x180848              #	Skip this ability
      nop
    </Location>
  </Patch>
  <Patch name="Formula 3B: Mana Burn/Feedback">
    <Description>
	Changes formula 3B to a mana burn/feedback ability 
        (destroys all MP and deals equivalent HP damage), physical evade.
        For magic evade, change '0x188510' to '0x1885b8'. To overwrite
        a different formula, change the offset.
    </Description>
    <Location file="BATTLE_BIN" offset="11FD58" mode="ASM">
      addiu   sp,sp,-0x18
      sw      ra,0x10(sp)
      
      jal     0x188510              # Physical Evade
      nop
      bne     v0,zero,END           # Skip to END if Evaded
      nop
      
      lw      v0,0x80192d98
      lw      v1,0x80192d90
      lhu     a0,0x002c(v0)         # Target MP
      li      v0,0xa0
      sb      v0,0x25(v1)           # Action type = HP Damage + MP Damage
      sh      a0,0x08(v1)           # Action MP Damage = Target MP
      sh      a0,0x04(v1)           # Action HP Damage = Target MP
      
END:  lw      ra,0x10(sp)
      addiu   sp,sp,0x18
      jr      ra
      nop
    </Location>
  </Patch>
  <Patch name="Formula 11: Magic Damage = MA * (WP+Y)">
    <Description>
	Changes formula 11 to magic damage, MA * (WP+Y), physical evade.
        For magic evade, change '0x188510' to '0x1885b8'. To overwrite
        a different formula, change the first offset.
    </Description>
    <Location file="BATTLE_BIN" offset="122124" mode="ASM">
      j       0x15cb00              # Jump to new section
    </Location>
    <Location file="BATTLE_BIN" offset="F5B00" mode="ASM">
      addiu   sp,sp,-0x18
      sw      ra,0x0010(sp)
      jal     0x188510              # Physical Evade
      nop
      bne     v0,zero,END           # Branch to END if evaded
      nop
      jal     0x15ca50              # Call new routine
      nop
      jal     0x188964              # Calculate MA * Y Damage
      nop
END:  lw      ra,0x10(sp)
      addiu   sp,sp,0x18
      jr      ra
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="F5A50" mode="ASM">
      lui     at,0x8019
      lw      a0,0x2d94(at)
      lbu     v0,0x3902(at)         # WP
      lbu     v1,0x38fa(at)         # Y
      lbu     a0,0x0037(a0)         # MA
      addu    v0,v0,v1              # WP + Y
      sh      v0,0x38d0(at)         # YA = WP + Y
      sh      a0,0x38ce(at)         # XA = MA
      jr      ra
      nop
    </Location>
  </Patch>
  <Patch name="Formulas [17], [3e], and [44] can be elementally canceled">
    <Description>
      Formulas [17], [3e], and [44] can be elementally canceled
    </Description>
    <Location file="BATTLE_BIN" offset="11FE54" mode="ASM">
      lui     a0,0x8019
      lw      v0,0x2d98(a0)
      lw      v1,0x2d90(a0)
      lhu     a0,0x002c(v0)         # Target MP
      li      v0,0x80
      sb      v0,0x25(v1)           # Action type = HP Damage
      j       0x186ff8              # Apply Elemental
      sh      a0,0x04(v1)           # Action HP Damage = Target MP
    </Location>
    <Location file="BATTLE_BIN" offset="11F6EC" mode="ASM">
      lui     v1,0x8019
      lw      v1,0x2d98(v1)         
      li      a0,0x80               
      lhu     v0,0x0028(v1)         # Target HP
      nop
      addiu   v0,v0,-1              # HP - 1
      slt     a1,v0,zero
      lui     v1,0x8019
      lw      v1,0x2d90(v1)
      addu    v0,v0,a1              
      sh      v0,0x04(v1)           # Action HP Damage = MAX(HP - 1, 0)
      j       0x186ff8              # Apply Elemental
      sb      a0,0x25(v1)           # Action type = HP Damage
    </Location>
  </Patch>
  <Patch name="Swordskill element strengthen and Dark/Night Sword elemental">
    <Description>
      Swordskill element fix - like previous fixes, but with Dark/Night sword elemental, using (WP+Y) and can status proc like Holy Sword can; Also, elements should strengthen even if they're not on the weapon.
    </Description>
    <Location file="BATTLE_BIN" offset="F5C00" mode="ASM">
      addiu   sp,sp,-0x18
      sw      ra,0x10(sp)
      sw      s0,0x0c(sp)
      
      move    s0,a0
      jal     0x188510              # Physical Evade
      nop
      bne     v0,zero,END           # Branch to END if evaded
      nop
      
      jal     0x185e5c              # Load PA and (WP+Y)
      nop
      lui     t0,0x8019
      lhu     t1,0x38ce(t0)         # XA
      lbu     t2,0x38f9(t0)         # Ability X
      lbu     a0,0x38f7(t0)        # Ability Element
      lbu     a1,0x3904(t0)        # Weapon Element
      lbu     a2,0x38f4(t0)        # Ability Flags 2
      srav    t1,t1,t2               
      sh      t1,0x38ce(t0)         # XA = XA / 2^X   
      andi    a2,a2,0x0020          # Check Blank flag under Hit Allies
      bgtz    a2,STR                # Skip to STR if not flagged
      nop
      
      or      a0,a0,a1              # Combine weapon and ability element
      
STR:  sb      a0,0x3904(t0)         # Save as weapon element
      jal     0x185fa4              # Element Strengthen Calculation
      nop
      jal     0x1886a4              # Physical Damage Calculation
      nop
      lui     a0,0x8019
      lw      a0,0x3904(a0)         # Element
      nop
      jal     0x184e98              # Elemental Damage Calculation
      nop
      lui     v0,0x8019
      lw      v0,0x2d90(v0)         # Action
      nop
      lbu     v0,0x0000(v0)         # Action Hit Status
      nop
      beq     v0,zero,DRN           # If Missed, skip to DRN (Drain section)
      nop
      
      jal     0x1870fc              # Elemental Absorption
      nop
      
DRN:  beq     s0,zero,STA           # Skip to STA (Status section) if argument was 0 
      nop
      
      li      t0,2
      beq     s0,t0,MDR             # Skip to MDR (MP Drain section) if argument was 2
      nop
      
HDR:  jal     0x187248              # HP Drain
      nop
      li      t0,0x81
      bne     v0,t0,END             # Skip to END if undead
      nop
      
      j       STA                   # Skip to status section (STA)
      nop
      
MDR:  jal     0x18746c              # MP Drain
      nop
      
STA:  jal     0x187eb4              # Status Proc
      nop
      
END:  lw      ra,0x0010(sp)
      lw      s0,0x000c(sp)
      addiu   sp,sp,0x0018
      jr      ra
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="12026C" mode="ASM">	
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="1202E0" mode="ASM"> 
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="12048C" mode="ASM"> 
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="122B20" mode="ASM">
      j       0x15cc00              # Call new routine with a0=0
      li      a0,0
    </Location>
    <Location file="BATTLE_BIN" offset="122C90" mode="ASM">
      j       0x15cc00              # Call new routine with a0=1
      li      a0,1
    </Location>
    <Location file="BATTLE_BIN" offset="122C50" mode="ASM">
      j       0x15cc00              # Call new routine with a0=2
      li      a0,2
    </Location>
    <Location file="BATTLE_BIN" offset="120338" mode="ASM">
      li      v0,0x81               # Drain routine: Return 0x81 as success
    </Location>
  </Patch>
  <Patch name="Swordskill Patch Addend: Switch to MA * (WP+Y)">
    <Description>
       Swordskill Patch Addend: Switch to MA * (WP+Y). Requires swordskill
       patch to be patched first.
    </Description>
    <Location file="BATTLE_BIN" offset="F5C20" mode="ASM">
      jal     0x15ca50
    </Location>
    <Location file="BATTLE_BIN" offset="F5C5C" mode="ASM">
      jal     0x188744
    </Location>
    <Location file="BATTLE_BIN" offset="F5C64" mode="ASM">
      jal     0x18877c
    </Location>
    <Location file="BATTLE_BIN" offset="F5A50" mode="ASM">
      lui     a1,0x8019
      lw      a0,0x2d94(a1)
      lbu     v0,0x3902(a1)         # WP
      lbu     v1,0x38fa(a1)         # Ability Y
      lbu     a0,0x0037(a0)         # MA
      addu    v0,v0,v1              # (WP + Y)
      sh      v0,0x38d0(a1)         # YA = (WP + Y)
      sh      a0,0x38ce(a1)         # XA = MA
      jr      ra
      nop
    </Location>
  </Patch>
  <Patch name="Signed Ability Y Values">
    <Description>
      Ability Y value is now signed and can accept integers between 
      -128 and +127, inclusive. To specify a negative value for Y, 
      take the number and add 256 (e.g. -3 would be input as 253).
    </Description>
    <Location file="BATTLE_BIN" offset="11ECA0" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11ECE0" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11ED20" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11ED60" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11EE10" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11EE70" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11F638" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11F6A0" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11F820" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11F8F4" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11F930" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11FC64" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11FC80" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11FC9C" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11FCB8" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11FD04" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11FD30" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="11FD74" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="11FEA8" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="121C40" mode="ASM">
      lb      v1,0x38fa(v1)
    </Location>
    <Location file="BATTLE_BIN" offset="1236C4" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
    <Location file="BATTLE_BIN" offset="123724" mode="ASM">
      lb      v0,0x38fa(v0)
    </Location>
  </Patch>
  <Patch name="Formula 54 becomes HealMP_(Y%)">
    <Description>
      Formula 54 becomes HealMP_(Y%)
    </Description>
    <Location file="BATTLE_BIN" offset="EAF1C" mode="ASM">
      lui     v0,0x8019
      lw      v1,0x2d98(v0)
      lb      a0,0x38fa(v0)         # Ability Y
      lh      v1,0x002e(v1)         # Target MP
      li      a1,100
      mult    a0,v1
      mflo    a0                    # MP * Y
      lw      a2,0x2d90(v0)
      li      a3,0x10
      div     a0,a1
      mflo    a0                    # MP * Y / 100
      sh      a0,0x0a(a2)           # Set as MP Healing
      jr      ra
      sb      a3,0x25(a2)           # Action type = MP Healing
    </Location>
    <Location file="BATTLE_BIN" offset="123668" mode="ASM">
      j       0x151f1c              # Jump to new section
      nop
    </Location>
  </Patch>
  <Patch name="Formula 44: Use HP instead of MP">
    <Description>Formula 44: Use HP instead of MP</Description>
    <Location file="BATTLE_BIN" offset="11FE64" mode="ASM">
      lhu     a0,0x28(v0)           # Load HP (instead of MP)
    </Location>
  </Patch>
  <Patch name="All formulas apply elemental">
    <Description>All formulas apply elemental</Description>
    <Location file="BATTLE_BIN" offset="1249F0" mode="ASM">
      j       0x186ffc              # Call Apply Elemental routine (at new location) at the end of formula code
    </Location>
    <Location file="BATTLE_BIN" offset="11FFF8" mode="ASM">
      jr      ra                    # Return immediately from original routine
      lui     t0,0x8019             # Shift routine down one space
      lw      v0,0x2d98(t0)
      addiu   sp,sp,-0x18
      sw      ra,0x14(sp)
      sw      s0,0x10(sp)
      lbu     v0,0x5a(v0)
      lbu     s0,0x38f7(t0)         # Regain space through repeated use of t0 = 0x8019
    </Location>
    <Location file="BATTLE_BIN" offset="1200E0" mode="ASM">
      jal     0x184e9c              # Call inner elemental routine at new location
    </Location>
    <Location file="BATTLE_BIN" offset="11DE98" mode="ASM">
      jr      ra                    # Return immediately from original routine
      lui     t0,0x8019             # Shift routine down one space
      lw      v0,0x2d98(t0)
      addiu   sp,sp,-0x18
      sw      ra,0x10(sp)
      lbu     v0,0x6d(v0)
      move    a1,a0
      and     v0,v0,a1
      beq     v0,zero,0x184ed8
      lw      v1,0x2d90(t0)         # Regain space by eating a nop and reusing t0
      jal     0x15cda0              # Jump to new absorb section
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="11DF1C" mode="ASM">
      lui     t0,0x8019             # Elemental Half section
      lw      t1,0x2d90(t0)
      lw      t2,0x2d8c(t0)
      lhu     t3,4(t1)
      lhu     t4,6(t2)
      sra     t3,t3,1               # Halve damage
      sh      t3,4(t1)              # Store as damage
      sra     t4,t4,1               # Halve returned healing (drain)
      sh      t4,6(t2)              # Store returned healing (drain)
      nop
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="11DF64" mode="ASM">
      lui     t0,0x8019             # Elemental Weak section
      lw      t1,0x2d90(t0)
      lw      t2,0x2d8c(t0)
      lhu     v1,0x10(t1)
      lh      a0,0x04(t1)
      ori     v1,v1,0x0800
      sll     a0,a0,1               # Double damage
      sh      v1,0x10(t1)
      sh      a0,0x04(t1)           # Store as damage
      sh      a0,0x06(t2)           # Store as returned healing (drain)
    </Location>
    <Location file="BATTLE_BIN" offset="120010" mode="ASM">
      jal     0x15cd30              # Call new routine
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="F5D30" mode="ASM">
      lui     t0,0x8019             # Element determination section
      lbu     t1,0x38f4(t0)
      lbu     t6,0x38f3(t0)
      sll     t1,t1,8
      or      t1,t1,t6
      lbu     s0,0x38f7(t0)
      lbu     t4,0x3904(t0)         # Weapon element
      lbu     t5,0x38d6(t0)         # Ability element
      ori     t2,zero,0x2004        
      and     t3,t1,t2              # Check if "Weapon Strike" and flag under "Hit Allies" checked
      beq     t3,t2,CMB             # If so, jump to combine element section
      nop
      
      beq     t5,zero,CMB           # If this ability is Attack (ID 0), then jump to combine element section
      nop
      
      j       PCB                   # Otherwise, jump past the combine section
      nop
      
CMB:  or      s0,s0,t4              # Combine section; combine the weapon and ability element

PCB:  j       0x15ce00              # Past combine section; go to next section
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="F5DA0" mode="ASM">
      lui     t0,0x8019             # Elemental Absorb section
      lw      t6,0x2d90(t0)
      lw      t1,0x2d8c(t0)
      li      t7,0x40
      li      t2,0x80
      lhu     t5,0x04(t6)
      lhu     t3,0x06(t1)
      sb      t7,0x25(t6)           # Action type = HP Healing
      beq     t5,zero,PDO
      sh      zero,0x04(t6)         # HP Damage = 0
      sh      t5,0x06(t6)           # HP Healing = old HP Damage
PDO:  sh      zero,0x06(t1)         # Returned HP Healing = 0 (Reverse drain)
      sh      t2,0x25(t1)           # Returned action type = HP Damage (Reverse drain)
      jr      ra
      sh      t3,0x04(t1)           # Returned HP Damage = Old Returned HP Healing (Reverse drain)
    </Location>
    <Location file="BATTLE_BIN" offset="F5E00" mode="ASM">
      lui     t0,0x8019             # Elemental Strengthen section
      lw      t6,0x2d94(t0)
      lw      t1,0x2d90(t0)
      lbu     t6,0x0071(t6)
      lhu     t2,0x0004(t1)
      and     t6,t6,s0
      beq     t6,zero,END           # Skip if element not strengthened
      lw      t4,0x2d8c(t0)
      
      sll     t5,t2,2
      addu    t5,t5,t2
      addi    t5,t5,2
      sra     t5,t5,2               # Damage = Damage * 5 / 4 (Rounded)
      sh      t5,0x04(t1)           # Save as HP Damage
      sh      t5,0x06(t4)           # Save as returned HP Healing (Drain)
END:  jr      ra
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="12002C" mode="ASM">
      lw      v1,0x80192d90         # Oil section (Target hit by fire attack)
      nop
      lhu     v0,0x04(v1)
      nop
      sll     v0,v0,1               # Double HP damage
      sh      v0,0x04(v1)           # Save as HP damage
      lbu     v0,0x22(v1)
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="120060" mode="ASM">
      nop                           # Oil - don't overwrite action type
      lbu     t0,0x25(a0)           # Load Action type
      nop
      ori     t0,t0,0x08            # Add status change
      sb      t0,0x25(a0)           # Save as action type
    </Location>
    <Location file="BATTLE_BIN" offset="120124" mode="ASM">
      j       0x187140              # Jump over normal absorption block
    </Location>
    <Location file="BATTLE_BIN" offset="11EFA4" mode="ASM">
      jr      ra                    # Blank out routine (Weapon element strengthen)
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="11EFFC" mode="ASM">
      jr      ra                    # Blank out routine (Ability element strengthen)
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="CEE4" mode="ASM">
      j       0x15ce60              # Jump to new section
    </Location>
    <Location file="BATTLE_BIN" offset="F5E60" mode="ASM">
      lui     t0,0x8019
      sb      zero,0x3904(t0)       # Zero out weapon element
      jr      ra
      sb      zero,0x38f7(t0)       # Zero out ability element
    </Location>
    <Location file="BATTLE_BIN" offset="1200C8" mode="ASM">
      jal     0x15d5c0              # Call routine to null action and drain action
    </Location>
    <Location file="BATTLE_BIN" offset="11DEF8" mode="ASM">
      jal     0x15d5c0              # Call routine to null action and drain action
    </Location>
    <Location file="BATTLE_BIN" offset="F65C0" mode="ASM">
      addiu   sp,sp,-12
      sw      ra,4(sp)

      jal     0x184e40              # Nullify current action
      nop

      lui     t0,0x8019
      lw      t1,0x2d90(t0)
      lw      t2,0x2d8c(t0)
      sw      t1,8(sp)              # Save action to stack
      sw      t2,0x2d90(t0)         # Save drain action as current action

      jal     0x184e40              # Nullify current action (drain action)
      nop

      lw      t1,8(sp)              # Load action from stack
      lui     t0,0x8019
      sw      t1,0x2d90(t0)         # Save current action back

      lw      ra,4(sp)
      addiu   sp,sp,12
      jr      ra
      nop 
    </Location>
  </Patch>
  <Patch name="Damage multiplied by decimal (default 2/3) (Requires elemental patch)">
    <Description>
      All damage multiplied by decimal. Requires All formulas apply elemental patch 
      (and that patch must be patched first, not at the same time)
    </Description>
    <Location file="BATTLE_BIN" offset="1249F0" mode="ASM">
      j       0x15d230
    </Location>
    <Location file="BATTLE_BIN" offset="F6160" mode="ASM">
      lui     t0,0x8019
      lw      t1,0x2d90(t0)
      lw      t2,0x2d8c(t0)
      lhu     t3,4(t1)
      li      t7,0xaaaaaaab         # Default multiplier = 2/3
      
      sltiu   t8,t3,1
      sltiu   t8,t8,1               # Check if damage > 0
      multu   t3,t7
      mfhi    t3                    # Damage = multiplier * damage
      sltiu   t9,t3,1               # Check if new damage = 0
      and     t8,t8,t9
      addu    t3,t3,t8              # If damage was > 0 but now = 0, add 1 to damage (make it 1)
      
      lhu     t4,6(t2)
      lhu     t5,8(t1)
      
      sltiu   t8,t4,1               # Same block as above, but with returned healing (drain)
      sltiu   t8,t8,1
      multu   t4,t7
      mfhi    t4
      sltiu   t9,t4,1
      and     t8,t8,t9
      addu    t4,t4,t8
      
      lhu     t6,10(t2)
      sh      t3,4(t1)
      
      sltiu   t8,t5,1               # Same block, but with MP damage
      sltiu   t8,t8,1
      multu   t5,t7
      mfhi    t5
      sltiu   t9,t5,1
      and     t8,t8,t9
      addu    t5,t5,t8

      sh      t4,6(t2)
      sh      t5,8(t1)

      sltiu   t8,t6,1               # Same block, but with returned MP healing (MP drain)
      sltiu   t8,t8,1
      multu   t6,t7
      mfhi    t6
      sltiu   t9,t6,1
      and     t8,t8,t9
      addu    t6,t6,t8

      jr      ra
      sh      t6,10(t2)
    </Location>
    <Location file="BATTLE_BIN" offset="F6230" mode="ASM">
      addiu   sp,sp,-8
      sw      ra,4(sp)
      jal     0x186ffc              # Apply Elemental
      nop
      jal     0x15d160              # Call new routine
      nop
      lw      ra,4(sp)
      addiu   sp,sp,8
      jr      ra
      nop
    </Location>
    <Variable name="XX" file="BATTLE_BIN" offset="F6170" bytes="2" default="AAAA" />
    <Variable name="YY" file="BATTLE_BIN" offset="F6174" bytes="2" default="AAAB" />  
  </Patch>
  <Patch name="Healing multiplied by decimal (default 2/3) (Requires elemental and damage patches)">
    <Description>
      All healing multiplied by decimal. Requires All formulas apply elemental patch 
      (and that patch must be patched first, not at the same time), then the damage addend
      patch (which must also be patched first, not at the same time)
    </Description>
    <Location file="BATTLE_BIN" offset="F6200" mode="ASM">
      j       0x15d280
    </Location>
    <Location file="BATTLE_BIN" offset="F6280" mode="ASM">
      lui     t0,0x8019
      lw      t1,0x2d90(t0)
      lw      t2,0x2d8c(t0)
      lhu     t3,6(t1)
      li      t7,0xaaaaaaab         # Default multiplier = 2/3
      
      sltiu   t8,t3,1
      sltiu   t8,t8,1               # Check if healing > 0
      multu   t3,t7
      mfhi    t3                    # Healing = multiplier * healing
      sltiu   t9,t3,1               # Check if new healing = 0
      and     t8,t8,t9
      addu    t3,t3,t8              # If healing was > 0 but now = 0, add 1 to healing (make it 1)
      
      lhu     t4,4(t2)
      lhu     t5,10(t1)
      
      sltiu   t8,t4,1               # Same block as above, but with returned damage (reversed drain)
      sltiu   t8,t8,1
      multu   t4,t7
      mfhi    t4
      sltiu   t9,t4,1
      and     t8,t8,t9
      addu    t4,t4,t8
      
      lhu     t6,8(t2)
      sh      t3,6(t1)
      
      sltiu   t8,t5,1               # Same block, but with MP healing
      sltiu   t8,t8,1
      multu   t5,t7
      mfhi    t5
      sltiu   t9,t5,1
      and     t8,t8,t9
      addu    t5,t5,t8
      
      sh      t4,4(t2)
      sh      t5,10(t1)

      sltiu   t8,t6,1               # Same block, but with returned MP damage (reversed MP drain)
      sltiu   t8,t8,1
      multu   t6,t7
      mfhi    t6
      sltiu   t9,t6,1
      and     t8,t8,t9
      addu    t6,t6,t8

      jr      ra
      sh      t6,8(t2)
    </Location>
    <Variable name="XX" file="BATTLE_BIN" offset="F6290" bytes="2" default="AAAA" />
    <Variable name="YY" file="BATTLE_BIN" offset="F6294" bytes="2" default="AAAB" />
  </Patch>
  <Patch name="Target's Faith in Spell damage calculations becomes XX%">
    <Location file="BATTLE_BIN" offset="1201F8" mode="ASM">
      li     v0,0x46
      nop
    </Location>
    <Variable name="XX" file="BATTLE_BIN" offset="1201F8" default="46"/>
  </Patch>
  <Patch name="[Half of MP] becomes [No MP Cost]">
    <Description>[Half of MP] becomes [No MP Cost]</Description>
    <Location file="BATTLE_BIN" offset="116B6C" mode="ASM">
      addu a0,zero,zero
    </Location>
  </Patch>
  <Patch name="Require Materia Blade -> Require Item Type X (Default Lance)">
    <Description>
      Require Materia Blade -> Require Item Type X (Default 0x0F = Lance)
  	  Weapon Type List:
        00 = Fists
        01 = Daggers
        02 = Ninjato
        03 = Sword
        04 = Knight Sword
        05 = Katana
        06 = Axe
        07 = Rod
        08 = Staff
        09 = Flail
        0A = Gun
        0B = Crossbow
        0C = Bow
        0D = Instrument
        0E = Book
        0F = Lance
        10 = Stick/Pole
        11 = Bag
        12 = Carpet/Veil
    </Description>
    <Location file="SCUS_942_21" offset="4CE24" mode="ASM">
      li      t0,0x0f               # Default: Lance
      move 	  v1,a1
      sll	  t1,v1,1
      addu	  t1,t1,v1
      sll	  t1,t1,2
      lbu	  v0,0x80062ebd(t1)     # Find item type
      lbu	  t3,0x0184(s1)         # Load equip flags
      subu 	  t1,v0,t0              # Check if item type = specified type
      sltiu	  t1,t1,1
      sll	  t1,t1,2                   
      or	  t3,t3,t1              # If so, set 0x04 bit ("Materia Blade" equipped) of equip flags
      j       0x5c668
      sb	  t3,0x0184(s1)         # Save equip flags to memory
    </Location>
    <Variable name="X" file="SCUS_942_21" offset="4CE24" default="0F" />
  </Patch>
  <Patch name="Apply defense: Item (Unknown 1) = Physical damage reduction (%); (Unknown 2) = Magical damage reduction (%)">
    <Description>
      See XML - If using with other patches, check comments in second Location tag to see what to uncomment.
      In the item data, this patch interprets Unknown 1 as Physical damage reduction (percentage) and Unknown 2 as Magical damage reduction (percentage).
      The damage reduction percentage for each piece of equipment is added to determine the total damage reduction.
      An ability's classification as physical or magical is determined by the 'Physical Attack' and 'Magical Attack' AI flags for the ability.
      If an ability is flagged with both (this shouldn't happen, really), both damage reduction percentages (physical AND magical) will be applied 
      (the sum of the two)!
    </Description>
    <Location file="BATTLE_BIN" offset="1249F0" mode="ASM">
      j       0x15d230
    </Location>
    <Location file="BATTLE_BIN" offset="F6230" mode="ASM">
      addiu   sp,sp,-8
      sw      ra,4(sp)
      jal     0x152300              # Call new defense routine
      nop
      # jal     0x186ffc              # If using "All formulas apply elemental" patch, uncomment this
      nop
      # jal     0x15d160              # If using damage/healing multiplied by decimal patches, uncomment this
      nop
      lw      ra,4(sp)
      addiu   sp,sp,8
      jr      ra
      nop
    </Location>
    <Location file="BATTLE_BIN" offset="EB300" mode="ASM">
      lui     t0,0x8019
      lw      t1,0x2d98(t0)         # Target unit
      lhu     t2,0x38d6(t0)         # Ability ID
      li      t3,0xff               # Code for empty slot
      
      sll     t2,t2,3               # Ability ID * 8
      lbu     t4,0x8005ebf6(t2)     # Ability AI Behavior Flags 3
      addiu   t1,t1,0x1a            # Unit equipment offset
      andi    t8,t4,0x01            # Use physical defense (1 = true, 0 = false)
      andi    t9,t4,0x02            # Use magical defense (2 = true, 0 = false)              

      sll     t8,t8,31
      sra     t8,t8,31              # Use physical defense (0xffffffff = true, 0 = false)
      sll     t9,t9,30
      sra     t9,t9,31              # Use magical defense (0xffffffff = true, 0 = false)
      
      lui     t2,0x8006             # Base address for item data
      li      v0,0                  # Result = 0
      li      v1,0                  # Loop counter = 0
      
LST:  lbu     t4,0(t1)              # Item ID for current equipment slot
      addiu   t1,t1,1               # Increment slot
      addiu   v1,v1,1               # Increment loop counter
      beq     t4,t3,LCH             # If slot is empty, skip this item and continue loop
      sll     t5,t4,1               # Item ID * 2
      beq     t4,zero,LCH           # If slot = 0 (nothing), skip this item and continue loop
      addu    t5,t5,t4              # Item ID * 3
      sll     t5,t5,2               # Item ID * 12
      addu    t5,t2,t5              
      lbu     t6,0x2ebe(t5)         # Physical defense (0x06)
      lbu     t7,0x2ec3(t5)         # Magical defense (0x0b)
      and     t6,t6,t8              # Effective physical defense (0 if unused)
      and     t7,t7,t9              # Effective magical defense (0 if unused)
      addu    t5,t6,t7              # Defense value
      addu    v0,v0,t5              # Add to defense tally
      
LCH:  sltiu   t6,v1,7
      bne     t6,zero,LST           # Loop while counter is less than 7
      nop
      
      lw      t1,0x2d90(t0)
      lw      t2,0x2d8c(t0)
      lhu     t3,4(t1)              # Load old HP damage
      lhu     t4,6(t2)              # Load old returned HP healing (drain)
      
      li      t7,100
      subu    t5,t7,v0
      slt     t6,zero,t5
      sll     t6,t6,31
      sra     t6,t6,31
      and     t5,t5,t6              # 100 - Defense% (Minimum 0)
      
      multu   t3,t5
      mflo    t3                    # Old HP Damage * (100 - Defense%)
      addiu   t3,t3,50              # Round the next division result
      li      t8,0x51eb851f         
      multu   t3,t8
      mfhi    t3                    
      sra     t3,t3,5               # Old HP Damage * (100 - Defense%) / 100
      sh      t3,4(t1)              # Save new HP damage
        
      multu   t4,t5
      mflo    t4                    # Old Returned HP Healing * (100 - Defense%)
      addiu   t4,t4,50              # Round the next division result
      nop
      multu   t4,t8                
      mfhi    t4
      sra     t4,t4,5               # Old Returned HP Healing * (100 - Defense%) / 100
      
      jr      ra                    # Return defense tally (v0)
      sh      t4,6(t2)              # Save new returned HP healing
    </Location>
  </Patch>
</Patches>
